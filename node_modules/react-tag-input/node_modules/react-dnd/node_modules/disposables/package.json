{
  "name": "disposables",
  "version": "1.0.1",
  "description": "Disposables let you safely compose resource disposal semantics",
  "main": "modules/index.js",
  "scripts": {
    "build": "./scripts/build",
    "test": "./scripts/test",
    "test-cov": "./scripts/test-cov",
    "prepublish": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gaearon/disposables.git"
  },
  "author": {
    "name": "Cloud Programmability Team",
    "url": "https://github.com/Reactive-Extensions/RxJS/blob/master/authors.txt"
  },
  "contributors": [
    {
      "name": "Dan Abramov",
      "email": "dan.abramov@me.com"
    }
  ],
  "licenses": [
    {
      "type": "Apache License, Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  ],
  "bugs": {
    "url": "https://github.com/gaearon/disposables/issues"
  },
  "homepage": "https://github.com/gaearon/disposables",
  "devDependencies": {
    "babel": "^5.0.10",
    "expect.js": "^0.3.1",
    "istanbul": "~0.3.7",
    "mocha": "^2.0.1"
  },
  "readme": "# disposables\n\nDisposables let you safely compose resource disposal semantics.\nThink DOM nodes, event handlers, socket connections.\n\nThis tiny package includes several disposables:\n\n* [`Disposable`](https://github.com/gaearon/disposables/blob/master/modules/Disposable.js) ensures its `dispose` action runs only once;\n* [`CompositeDisposable`](https://github.com/gaearon/disposables/blob/master/modules/CompositeDisposable.js) ensures a group of disposables are disposed together;\n* [`SerialDisposable`](https://github.com/gaearon/disposables/blob/master/modules/SerialDisposable.js) switches underlying disposables on the fly and disposes them.\n\nThis implementation of disposables is extracted from [RxJS](https://github.com/Reactive-Extensions/RxJS/blob/master/src/core/disposables).\nI took the liberty to tweak the code style to my liking and provide this as a standalone package.\n\nThe API is *mostly* the same as RxJS except stricter in a few places.\nIt does not strive for 100% API compatibility with RxJS, but general disposable behavior should match.\n\nIt's best if you consult the source and tests, as classes are small and few.\n\n### Usage\n\n#### Importing\n\n```js\nimport { Disposable, CompositeDisposable, SerialDisposable } from 'disposables';\n\n// or you can import just the ones you need to keep it even tinier\n// import SerialDisposable from 'disposables/modules/SerialDisposable';\n\nfunction attachHandlers(node) {\n\tlet someHandler = ...;\n\tnode.addEventHandler(someHandler);\n\n\t// use Disposable to guarantee single execution\n\treturn new Disposable(() => {\n\t  node.removeEventHandler(someHandler);\n\t});\n}\n\n// CompositeDisposable lets you compose several disposables...\nlet nodes = ...;\nlet compositeDisp = new CompositeDisposable(nodes.map(attachHandlers));\n\n// and more later...\nlet moreNodes = ...\nmoreNodes.map(attachHandlers).forEach(d => compositeDisp.add(d));\n\n// and dispose them at once!\nfunction goodbye() {\n\tcompositeDisp.dispose();\n}\n\n// ... or replace with a bunch of new ones ...\nlet serialDisp = new SerialDisposable();\nserialDisp.setDisposable(compositeDisp);\n\nfunction replaceNodes(newNodes) {\n\tlet nextCompositeDisp = newNodes.map(attachHandlers);\n\n\t// release all the previous disposables:\n\tserialDisp.setDisposable(nextCompositeDisp);\n}\n\n// with a guarantee of each dispose() called only once.\n```\n\n### Why Use This Over RxJS\n\n* You only need disposables and not observables;\n* RxJS is still figuring out [its modularity story](https://github.com/Reactive-Extensions/RxJS-Modular) and [it's not ready](https://github.com/Reactive-Extensions/RxJS-Modular/issues/4#issuecomment-90879664).\n\nReally, there are no other reasons.\n\n### License\n\nLike the original RxJS code, it is licened under Apache 2.0.\n",
  "readmeFilename": "README.md",
  "_id": "disposables@1.0.1",
  "dist": {
    "shasum": "260819cfb3f548d116a8b401e9fd122f234496d6"
  },
  "_from": "disposables@^1.0.1",
  "_resolved": "https://registry.npmjs.org/disposables/-/disposables-1.0.1.tgz"
}
