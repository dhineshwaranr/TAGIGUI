{
  "name": "dnd-core",
  "version": "2.0.2",
  "description": "Drag and drop sans the GUI",
  "main": "lib/index.js",
  "scripts": {
    "clean": "rimraf lib",
    "build": "npm run clean && babel src --out-dir lib",
    "test": "mocha --compilers js:babel/register --recursive",
    "test:cov": "istanbul cover ./node_modules/.bin/_mocha -- --compilers js:babel/register --recursive",
    "test:watch": "npm run test -- --watch",
    "prepublish": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gaearon/dnd-core.git"
  },
  "author": {
    "name": "Dan Abramov",
    "email": "dan.abramov@me.com",
    "url": "http://github.com/gaearon"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/gaearon/dnd-core/issues"
  },
  "homepage": "https://github.com/gaearon/dnd-core",
  "devDependencies": {
    "babel": "^5.8.23",
    "babel-plugin-object-assign": "^1.2.1",
    "expect.js": "^0.3.1",
    "istanbul": "~0.3.7",
    "mocha": "^2.0.1",
    "rimraf": "^2.4.3"
  },
  "dependencies": {
    "asap": "^2.0.3",
    "invariant": "^2.0.0",
    "lodash": "^4.2.0",
    "redux": "^3.2.0"
  },
  "readme": "# dnd-core [![npm package](https://img.shields.io/npm/v/dnd-core.svg?style=flat-square)](https://www.npmjs.org/package/dnd-core) [![Build Status](https://travis-ci.org/gaearon/dnd-core.svg?branch=master)](https://travis-ci.org/gaearon/dnd-core) [![Test Coverage](https://codeclimate.com/github/gaearon/dnd-core/badges/coverage.svg)](https://codeclimate.com/github/gaearon/dnd-core) [![Join the chat at https://gitter.im/gaearon/dnd-core](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/gaearon/dnd-core?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)  \n\n\nDrag and drop sans the GUI.  \n\nThis is a clean implementation of drag and drop primitives that does not depend on the browser.  \nIt powers [React DnD](https://github.com/gaearon/react-dnd) internally.  \n\n## Wat?\n\nTo give you a better idea:\n\n* There is no DOM here\n* We let you define drop target and drag source logic\n* We let you supply custom underlying implementations (console, DOM via jQuery, React, React Native, *whatever*)\n* We manage drag source and drop target interaction\n\nThis was written to support some rather complicated scenarios that were too hard to implement in [React DnD](https://github.com/gaearon/react-dnd) due to its current architecture:\n\n* [Mocking drag and drop interaction in tests](https://github.com/gaearon/react-dnd/issues/55)\n* [Full support for arbitrary nesting and handling drag sources and drop targets](https://github.com/gaearon/react-dnd/issues/87)\n* [Dragging multiple items at once](https://github.com/gaearon/react-dnd/issues/14)\n* [Even when source is removed, letting another drag source “represent it” (e.g. card disappeared from one Kanban list, reappeared in another one)](https://github.com/gaearon/react-dnd/pull/64#issuecomment-76118757)\n\nTurns out, these problems are much easier to solve when DOM is thrown out of the window.\n\n## What's the API like?\n\n[Tests](https://github.com/gaearon/dnd-core/tree/master/test) should give you some idea. You register drag sources and drop targets, hook up a backend (you can use barebone `TestBackend` or implement a fancy real one yourself), and your drag sources and drop targets magically begin to interact.\n\n![](http://i.imgur.com/6l8CpxZ.png)\n\n",
  "readmeFilename": "README.md",
  "_id": "dnd-core@2.0.2",
  "dist": {
    "shasum": "b404383f6400e9b54f05404182b3866f333773f4"
  },
  "_from": "dnd-core@^2.0.1",
  "_resolved": "https://registry.npmjs.org/dnd-core/-/dnd-core-2.0.2.tgz"
}
